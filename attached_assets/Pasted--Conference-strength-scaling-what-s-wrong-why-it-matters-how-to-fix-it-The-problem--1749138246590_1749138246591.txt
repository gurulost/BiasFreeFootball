### Conference-strength scaling: what’s wrong, why it matters, how to fix it

---

#### The problem

* Intra-conference edges are currently multiplied by **√S\_conf**.
* 2024 example: SEC finished Stage-1 with **S ≈ 0.40** → √0.40 ≈ 0.63, so every SEC-vs-SEC result was cut to 63 % of its natural weight.
* Mid-majors (MAC, C-USA) landed near **S ≈ 0.70** → edges boosted to √0.70 ≈ 0.84.
* Outcome: SEC powers like Georgia and Alabama crashed to #90-range, while MAC teams flooded the top 25.

The scaling is data-driven but **over-corrects**; we need a softer, relative adjustment.

---

#### The fix (relative scaling, no cap)

For every intra-conference edge use

```
multiplier = sqrt( S_conf / mean(S_all) )
```

* If a league is average → multiplier = 1.
* SEC example: √(0.40 / 0.55) ≈ 0.85 (moderate damp).
* MAC example: √(0.70 / 0.55) ≈ 1.12 (moderate boost).

No caps or arbitrary clamps—purely the ratio to the season’s average strength, still 100 % on-field.

---

#### Implementation steps for the coder

1. **Edit `inject_conf_strength`** in `src/graph.py`

   ```python
   def inject_conf_strength(G, S):
       mean_S = sum(S.values()) / len(S)
       for u, v, data in G.edges(data=True):
           conf = team_to_conf[u]
           rel = (S[conf] / mean_S) ** 0.5
           data["weight"] *= rel
   ```

   Remove the old line that used `sqrt(S[conf])`; no cap logic.

2. **Unit test**
   Create `tests/test_conf_injection.py`:

   ```python
   def test_relative_scaler():
       S = {"SEC": 0.40, "MAC": 0.70}
       mean_S = (0.40 + 0.70)/2
       assert abs(((0.40/mean_S)**0.5) - 0.85) < 1e-2
       assert abs(((0.70/mean_S)**0.5) - 1.12) < 1e-2
   ```

3. **Re-run 2024 replay**
   Execute `notebooks/replay_2024.ipynb`. Expect SEC teams in the top-20 window and bowl log-loss equal or better.

4. **Update docs**
   In `README.md`, replace the old description with:
   *“Stage-2 scales every intra-conference edge by √(S\_conf / mean S). No artificial caps applied.”*

5. **Commit & push**
   Tag as new patch version; CI should pass. Monday’s scheduled Action will publish updated rankings automatically.

This keeps the model fully “games-only” while restoring realistic balance across conferences.
