### Action memo for the coder

**Goal:** make sure every game row that feeds the model is complete, canonical, and conference-correct for **all** teams—not just BYU—so we never again lose a contender because of a naming or conference glitch.

---

#### 1. Build a “canonical name” map once

* Create a JSON/YAML file `data/canonical_teams.yaml`.
  Each line maps every alias we might see to one canonical string and conference for 2024. Example:

```
BYU:           {name: "BYU",           conf: "Big 12"}
Brigham Young: {name: "BYU",           conf: "Big 12"}
UTSA:          {name: "UTSA",          conf: "American"}
...
```

* Use a short script to auto-generate this list from the CFBD “teams” endpoint, then hand-edit any missing aliases.

---

#### 2. Insert a validation step in `ingest.py`

After pulling raw games:

```python
bad_rows = []
for row in games_raw:
    home = canonicalize(row['home_team'])
    away = canonicalize(row['away_team'])
    # missing alias?
    if home is None or away is None:
        bad_rows.append(row)
        continue
    # patch team strings
    row['home_team'] = home['name']
    row['away_team'] = away['name']
    # patch conference if CFBD mis-tagged it
    if row['home_conference'] != home['conf']:
        row['home_conference'] = home['conf']
    if row['away_conference'] != away['conf']:
        row['away_conference'] = away['conf']
```

If `bad_rows` isn’t empty, **fail the ingest step** so CI turns red. This forces us to update the alias map instead of silently dropping edges.

---

#### 3. Assert schedule completeness

At the end of ingest, for each FBS team:

```python
expected = schedule_matrix[(team, season)].count   # from CFBD “games” or our own table
actual   = sum(1 for g in games_clean if team in (g.home_team, g.away_team))
assert actual == expected, f"{team} missing games: {expected - actual}"
```

If an FBS team is short even one game, the pipeline stops and prints the mismatch.

---

#### 4. Venue sanity

For every neutral-site flag:

```python
if row['neutralSite']:
    row['venue'] = 'neutral'
    row['home_field_adv'] = False
```

For bowls/CFP the API sometimes sets a nominal “home\_team”. Neutral flag overrides that.

---

#### 5. Automated nightly health report

Add a GitHub Action step **after ingest** that:

* dumps `missing_games.txt` and `alias_warnings.txt` into the build artefacts;
* comments on the PR if new aliases appear.

---

#### 6. Retest BYU scenario

1. Wipe the processed cache.
2. Run `python src/live_pipeline.py --season 2024 --week 15`.
3. BYU should now appear roughly in the #20 window.
   If not, print their `edge_breakdown('BYU', 2024)` again—there should be no zero-weight rows.

---

#### 7. Commit & push

* Commit `canonical_teams.yaml`, updated ingest code, new unit tests for alias mapping and schedule completeness.
* CI should block merges if any alias or missing-game assertion fails.

Once this lands, any future ingest for any season will stop cold if a team’s name or conference is off, eliminating the “hidden data hole” class of errors.
